{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react';\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n/*\n\n* Getting List of existing Customers -> Shopify API - here (done)\n\n*/\n\nconst GET_CUSTOMERS = gql`\nquery getCustomers {\n    customers (first: 3) {\n      edges {\n        node {\n          id\n          displayName\n          email\n        }\n      }\n    }\n  }\n`;\n\nfunction CustomerList() {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState([]);\n  useEffect(() => {\n    console.log(selected);\n  }, [selected]);\n  return /*#__PURE__*/_jsx(Query, {\n    query: GET_CUSTOMERS,\n    children: ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/_jsx(\"p\", {\n        children: \"Loading...\"\n      });\n      if (error) return /*#__PURE__*/_jsx(\"p\", {\n        children: error.message\n      });\n      console.log(\"Here's the ENDGAME \\n\", data);\n      return /*#__PURE__*/_jsx(Card, {\n        children: /*#__PURE__*/_jsx(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: \"Customer\",\n            plural: \"Customers\"\n          },\n          items: data.nodes,\n          renderItem: item => {\n            const media = /*#__PURE__*/_jsx(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : \"\",\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : \"\"\n            });\n\n            const price = item.variants.edges[0].node.price;\n            return /*#__PURE__*/_jsx(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: `View details for ${item.title}`,\n              onClick: () => {\n                store.set(\"item\", item);\n                redirectToProduct();\n              },\n              children: /*#__PURE__*/_jsxs(Stack, {\n                children: [/*#__PURE__*/_jsx(Stack.Item, {\n                  fill: true,\n                  children: /*#__PURE__*/_jsx(\"h3\", {\n                    children: /*#__PURE__*/_jsx(TextStyle, {\n                      variation: \"strong\",\n                      children: item.title\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(Stack.Item, {\n                  children: /*#__PURE__*/_jsxs(\"p\", {\n                    children: [\"$\", price]\n                  })\n                }), /*#__PURE__*/_jsx(Stack.Item, {\n                  children: /*#__PURE__*/_jsxs(\"p\", {\n                    children: [\"Expires on \", twoWeeksFromNow, \" \"]\n                  })\n                })]\n              })\n            });\n          }\n        })\n      }); // return data.customers.edges.map(edge => (\n      //   <div key={edge.node.id}>\n      //     <p>{`${edge.node.displayName} by ${edge.node.email}`}</p>\n      //   </div>\n      // ));\n      // return (\n      //   <Layout >\n      //     <Layout.Section oneHalf>\n      //       <EmptyState>\n      //         <ReviewForm customers={selected} setCustomers={setSelected} />\n      //       </EmptyState>\n      //     </Layout.Section>\n      //     <Layout.Section oneHalf>\n      //       <Card>\n      //         <Scrollable shadow style={{ height: '300px' }}>\n      //           <OptionList\n      //             title=\"To be added among customers\"\n      //             onChange={setSelected}\n      //             allowMultiple\n      //             // options={[\n      //             //   { \n      //             //     label: 'BBN Frank', \n      //             //     value: 'abhisheksrivastavabbn@gmail.com' \n      //             //   },\n      //             //   { \n      //             //     label: 'Dale Frank', \n      //             //     value: 'abhisheksrivastavabbn@gmail.com' \n      //             //   }\n      //             // ]}\n      //             selected={selected}\n      //           />\n      //         </Scrollable>\n      //       </Card>\n      //     </Layout.Section>\n      //   </Layout>\n      // )\n    }\n  });\n}\n\nexport default CustomerList;","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/CustomerList.js"],"names":["Card","EmptyState","Layout","OptionList","Scrollable","gql","React","useEffect","useState","Query","Form","ReviewForm","GET_CUSTOMERS","CustomerList","selected","setSelected","console","log","loading","error","data","message","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title","store","set","redirectToProduct","twoWeeksFromNow"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,UAA/C,QAAiE,kBAAjE;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,aAAa,GAAGP,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,SAASQ,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAKA,sBACE,KAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,aAAd;AAAA,cACG,CAAC;AAAEM,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,QAAP;AACb,UAAIC,KAAJ,EAAW,oBAAO;AAAA,kBAAIA,KAAK,CAACE;AAAV,QAAP;AAEXL,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCG,IAArC;AAEA,0BACE,KAAC,IAAD;AAAA,+BACE,KAAC,YAAD;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,YAAY,EAAE;AAAEE,YAAAA,QAAQ,EAAE,UAAZ;AAAwBC,YAAAA,MAAM,EAAE;AAAhC,WAFhB;AAGE,UAAA,KAAK,EAAEH,IAAI,CAACI,KAHd;AAIE,UAAA,UAAU,EAAGC,IAAD,IAAU;AACpB,kBAAMC,KAAK,gBACT,KAAC,SAAD;AACE,cAAA,MAAM,EACJD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACIH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAD9B,GAEI,EAJR;AAME,cAAA,GAAG,EACDL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACIH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OAD9B,GAEI;AATR,cADF;;AAcA,kBAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,gCACE,KAAC,YAAD,CAAc,IAAd;AACE,cAAA,EAAE,EAAEP,IAAI,CAACS,EADX;AAEE,cAAA,KAAK,EAAER,KAFT;AAGE,cAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM,EAHrD;AAIE,cAAA,OAAO,EAAE,MAAM;AACbC,gBAAAA,KAAK,CAACC,GAAN,CAAU,MAAV,EAAkBZ,IAAlB;AACAa,gBAAAA,iBAAiB;AAClB,eAPH;AAAA,qCASE,MAAC,KAAD;AAAA,wCACE,KAAC,KAAD,CAAO,IAAP;AAAY,kBAAA,IAAI,MAAhB;AAAA,yCACE;AAAA,2CACE,KAAC,SAAD;AAAW,sBAAA,SAAS,EAAC,QAArB;AAAA,gCACGb,IAAI,CAACU;AADR;AADF;AADF,kBADF,eAQE,KAAC,KAAD,CAAO,IAAP;AAAA,yCACE;AAAA,oCAAKH,KAAL;AAAA;AADF,kBARF,eAWE,KAAC,KAAD,CAAO,IAAP;AAAA,yCACE;AAAA,8CAAeO,eAAf;AAAA;AADF,kBAXF;AAAA;AATF,cADF;AA2BD;AA/CH;AADF,QADF,CAN6B,CA4D7B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AArGH,IADF;AAyGD;;AAED,eAAe1B,YAAf","sourcesContent":["import { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react'\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n\n/*\n\n* Getting List of existing Customers -> Shopify API - here (done)\n\n*/\n\n\nconst GET_CUSTOMERS = gql`\nquery getCustomers {\n    customers (first: 3) {\n      edges {\n        node {\n          id\n          displayName\n          email\n        }\n      }\n    }\n  }\n`\n\nfunction CustomerList() {\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    console.log(selected)\n  }, [selected])\n\n\n  return (\n    <Query query={GET_CUSTOMERS}>\n      {({ loading, error, data }) => {\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>{error.message}</p>;\n\n        console.log(\"Here's the ENDGAME \\n\", data)\n\n        return (\n          <Card>\n            <ResourceList\n              showHeader\n              resourceName={{ singular: \"Customer\", plural: \"Customers\" }}\n              items={data.nodes}\n              renderItem={(item) => {\n                const media = (\n                  <Thumbnail\n                    source={\n                      item.images.edges[0]\n                        ? item.images.edges[0].node.originalSrc\n                        : \"\"\n                    }\n                    alt={\n                      item.images.edges[0]\n                        ? item.images.edges[0].node.altText\n                        : \"\"\n                    }\n                  />\n                );\n                const price = item.variants.edges[0].node.price;\n                return (\n                  <ResourceList.Item\n                    id={item.id}\n                    media={media}\n                    accessibilityLabel={`View details for ${item.title}`}\n                    onClick={() => {\n                      store.set(\"item\", item);\n                      redirectToProduct();\n                    }}\n                  >\n                    <Stack>\n                      <Stack.Item fill>\n                        <h3>\n                          <TextStyle variation=\"strong\">\n                            {item.title}\n                          </TextStyle>\n                        </h3>\n                      </Stack.Item>\n                      <Stack.Item>\n                        <p>${price}</p>\n                      </Stack.Item>\n                      <Stack.Item>\n                        <p>Expires on {twoWeeksFromNow} </p>\n                      </Stack.Item>\n                    </Stack>\n                  </ResourceList.Item>\n                );\n              }}\n            />\n          </Card>\n        );\n\n        // return data.customers.edges.map(edge => (\n        //   <div key={edge.node.id}>\n        //     <p>{`${edge.node.displayName} by ${edge.node.email}`}</p>\n        //   </div>\n        // ));\n\n        // return (\n        //   <Layout >\n        //     <Layout.Section oneHalf>\n        //       <EmptyState>\n        //         <ReviewForm customers={selected} setCustomers={setSelected} />\n        //       </EmptyState>\n        //     </Layout.Section>\n\n        //     <Layout.Section oneHalf>\n\n        //       <Card>\n        //         <Scrollable shadow style={{ height: '300px' }}>\n        //           <OptionList\n        //             title=\"To be added among customers\"\n        //             onChange={setSelected}\n        //             allowMultiple\n\n        //             // options={[\n        //             //   { \n        //             //     label: 'BBN Frank', \n        //             //     value: 'abhisheksrivastavabbn@gmail.com' \n        //             //   },\n        //             //   { \n        //             //     label: 'Dale Frank', \n        //             //     value: 'abhisheksrivastavabbn@gmail.com' \n        //             //   }\n        //             // ]}\n        //             selected={selected}\n        //           />\n        //         </Scrollable>\n        //       </Card>\n        //     </Layout.Section>\n        //   </Layout>\n        // )\n      }}\n    </Query>\n  );\n}\n\nexport default CustomerList\n"]},"metadata":{},"sourceType":"module"}