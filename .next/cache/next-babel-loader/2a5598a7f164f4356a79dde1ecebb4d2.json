{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport { Button, Card, EmptyState, Layout, OptionList, Scrollable, TextField } from '@shopify/polaris';\nimport React, { useCallback, useEffect, useState } from 'react';\n/*\nThings I am doing here:\n\n* Sending an invitation to be among customers -> SurveySparrow API\n* Fetching a list of people who filled a survey -> SurveySparrow API\n* Adding those people among my shopify Customers -> Shopify API\n* After adding a customer, deleting their response -> SurveySparrow API\n\n*/\n\nfunction InviteCustomer() {\n  _s();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var handleChange = useCallback(function (newValue) {\n    return setEmail(newValue);\n  }, []);\n\n  var _useState2 = useState([]),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  useEffect(function () {\n    console.log(selected);\n  }, [selected]);\n  var url = 'https://api.surveysparrow.com/v1/shares/email/2244557';\n  var bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n  var requestOptions = {\n    method: 'PUT',\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': bearer\n    },\n    body: JSON.stringify({\n      \"contacts\": [email]\n    })\n  };\n\n  var sendInvite = function sendInvite(e) {\n    e.preventDefault();\n    console.log(\"Sending Customer Invite Mail...\");\n\n    if (email) {\n      console.log(email);\n      fetch(url, requestOptions).then(function (res) {\n        console.log(\"Customer Invite Mail Sent!\");\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n      setEmail('');\n    } else {\n      console.log(\"You entered any email id\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [/*#__PURE__*/_jsx(EmptyState, {\n      heading: \"Add a new Customer\",\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: sendInvite,\n        children: [/*#__PURE__*/_jsx(TextField, {\n          label: \"Email id\",\n          value: email,\n          onChange: handleChange,\n          placeholder: \"Enter email id\"\n        }), /*#__PURE__*/_jsx(Button, {\n          submit: true,\n          primary: true,\n          children: \"Share Survey\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"h1\", {\n      children: \"Responses are mentioned below, select to add to them among Customers.\"\n    }), /*#__PURE__*/_jsx(Layout.Section, {\n      oneHalf: true,\n      children: /*#__PURE__*/_jsx(EmptyState, {\n        children: /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsx(Scrollable, {\n            shadow: true,\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsx(OptionList, {\n              title: \"To be added among customers\",\n              onChange: setSelected,\n              allowMultiple: true,\n              options: [{\n                label: 'BBN Frank',\n                value: 'abhisheksrivastavabbn@gmail.com'\n              }, {\n                label: 'Sept Fifth',\n                value: 'abhisheksrivastavasept5@gmail.com'\n              }, {\n                label: 'Londer Sept',\n                value: 'abhisheksrivastava29sept@gmail.com'\n              }, {\n                label: 'V technology',\n                value: 'abhishek.srivastava2019@vitbhopal.ac.in'\n              }, {\n                label: 'Survey Player',\n                value: 'abhishek.srivastava@surveysparrow.com'\n              }],\n              selected: selected\n            })\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(Layout.Section, {\n      oneHalf: true,\n      children: /*#__PURE__*/_jsx(AddCustomer, {})\n    })]\n  });\n}\n\n_s(InviteCustomer, \"eXzRCHIw/sWJJrIUYp0oXNMrJtA=\");\n\n_c = InviteCustomer;\nexport default InviteCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"InviteCustomer\");","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/InviteCustomer.js"],"names":["Button","Card","EmptyState","Layout","OptionList","Scrollable","TextField","React","useCallback","useEffect","useState","InviteCustomer","email","setEmail","handleChange","newValue","selected","setSelected","console","log","url","bearer","requestOptions","method","withCredentials","headers","body","JSON","stringify","sendInvite","e","preventDefault","fetch","then","res","err","height","label","value"],"mappings":"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","sourcesContent":["import { Button, Card, EmptyState, Layout, OptionList, Scrollable, TextField } from '@shopify/polaris'\nimport React, { useCallback, useEffect, useState } from 'react'\n\n/*\nThings I am doing here:\n\n* Sending an invitation to be among customers -> SurveySparrow API\n* Fetching a list of people who filled a survey -> SurveySparrow API\n* Adding those people among my shopify Customers -> Shopify API\n* After adding a customer, deleting their response -> SurveySparrow API\n\n*/\n\nfunction InviteCustomer() {\n  const [email, setEmail] = useState('');\n  const handleChange = useCallback((newValue) => setEmail(newValue), []);\n\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    console.log(selected)\n  }, [selected])\n\n  const url = 'https://api.surveysparrow.com/v1/shares/email/2244557'\n  const bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n  const requestOptions = {\n    method: 'PUT',\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': bearer,\n    },\n    body: JSON.stringify({\n      \"contacts\": [email]\n    })\n  };\n\n  const sendInvite = (e) => {\n\n    e.preventDefault();\n    console.log(\"Sending Customer Invite Mail...\")\n\n    if (email) {\n      console.log(email)\n\n      fetch(url, requestOptions)\n        .then((res) => {\n          console.log(\"Customer Invite Mail Sent!\")\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n\n      setEmail('');\n    }\n    else {\n      console.log(\"You entered any email id\")\n    }\n  };\n\n  return (\n    <Layout >\n      <EmptyState\n        heading=\"Add a new Customer\"\n      >\n        <form onSubmit={sendInvite}>\n          <TextField\n            label=\"Email id\"\n            value={email}\n            onChange={handleChange}\n            placeholder=\"Enter email id\"\n          />\n          <Button submit primary>Share Survey</Button>\n        </form>\n      </EmptyState>\n\n      <h1>Responses are mentioned below, select to add to them among Customers.</h1>\n      <Layout.Section oneHalf>\n        <EmptyState>\n          <Card>\n            <Scrollable shadow style={{ height: '300px' }}>\n              <OptionList\n                title=\"To be added among customers\"\n                onChange={setSelected}\n                allowMultiple\n                options={[\n                  { label: 'BBN Frank', value: 'abhisheksrivastavabbn@gmail.com' },\n                  { label: 'Sept Fifth', value: 'abhisheksrivastavasept5@gmail.com' },\n                  { label: 'Londer Sept', value: 'abhisheksrivastava29sept@gmail.com' },\n                  { label: 'V technology', value: 'abhishek.srivastava2019@vitbhopal.ac.in' },\n                  { label: 'Survey Player', value: 'abhishek.srivastava@surveysparrow.com' },\n                ]}\n                selected={selected}\n              />\n            </Scrollable>\n          </Card>\n        </EmptyState>\n      </Layout.Section>\n      <Layout.Section oneHalf>\n        <AddCustomer/>\n        {/* <ReviewForm customers={selected} setCustomers={setSelected} /> */}\n      </Layout.Section>\n    </Layout>\n  )\n}\n\nexport default InviteCustomer\n"]},"metadata":{},"sourceType":"module"}