{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get('ids')\n        },\n        children: function children(_ref) {\n          var data = _ref.data,\n              loading = _ref.loading,\n              error = _ref.error;\n          if (loading) return /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading\\u2026\"\n          });\n          if (error) return /*#__PURE__*/_jsx(\"div\", {\n            children: error.message\n          });\n          console.log(data);\n          return /*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsx(\"p\", {\n              children: \"stuff here\"\n            })\n          });\n        }\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/ResourceList.js"],"names":["React","gql","Query","Card","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","ids","get","data","loading","error","message","console","log","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;;IA6BMK,wB;;;;;;;;;;;;;6BACI;AACR,0BACC,KAAC,KAAD;AAAO,QAAA,KAAK,EAAED,kBAAd;AAAkC,QAAA,SAAS,EAAE;AAAEE,UAAAA,GAAG,EAAEH,KAAK,CAACI,GAAN,CAAU,KAAV;AAAP,SAA7C;AAAA,kBACE,wBAA8B;AAAA,cAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,cAArBC,OAAqB,QAArBA,OAAqB;AAAA,cAAZC,KAAY,QAAZA,KAAY;AAC9B,cAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA,YAAP;AACb,cAAIC,KAAJ,EAAW,oBAAO;AAAA,sBAAMA,KAAK,CAACC;AAAZ,YAAP;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,8BACC,KAAC,IAAD;AAAA,mCACC;AAAA;AAAA;AADD,YADD;AAKA;AAVF,QADD;AAcA;;;;EAhBqCT,KAAK,CAACe,S;;AAmB7C,eAAeT,wBAAf","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card } from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n\t\t\t\t{({ data, loading, error }) => {\n\t\t\t\t\tif (loading) return <div>Loadingâ€¦</div>;\n\t\t\t\t\tif (error) return <div>{error.message}</div>;\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<p>stuff here</p>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Query>\n\t\t);\n\t}\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}