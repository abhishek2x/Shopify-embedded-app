{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    customers(first: 5) {\\n      edges {\\n        node {\\n          id\\n          displayName\\n          email\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react';\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n/*\n\n* Getting List of existing Customers -> Shopify API - here (not done)\n\n*/\n\nvar Get_10_Customers = gql(_templateObject());\n\nvar CustomerList = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomerList, _React$Component);\n\n  var _super = _createSuper(CustomerList);\n\n  function CustomerList() {\n    _classCallCheck(this, CustomerList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CustomerList, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(Query, {\n        query: GET_CUSTOMERS,\n        children: function children(_ref) {\n          var data = _ref.data,\n              loading = _ref.loading,\n              error = _ref.error;\n\n          if (loading) {\n            return /*#__PURE__*/_jsx(\"div\", {\n              children: \"Loading\\u2026\"\n            });\n          }\n\n          if (error) {\n            return /*#__PURE__*/_jsx(\"div\", {\n              children: error.message\n            });\n          }\n\n          {\n            return data.customers.edges.map(function (edge) {\n              return /*#__PURE__*/_jsxs(\"p\", {\n                children: [\" \", edge.node.displayName]\n              }, edge.node.displayName);\n            });\n          }\n        }\n      });\n    }\n  }]);\n\n  return CustomerList;\n}(React.Component); // function CustomerList() {\n//   const [selected, setSelected] = useState([]);\n//   useEffect(() => {\n//     console.log(selected)\n//   }, [selected])\n//   return (\n//     <Query query={Get_10_Customers}>\n//       {({ loading, error, data }) => {\n//         if (loading) return <p>Loading...</p>;\n//         if (error) return <p>{ error.message }</p>;\n//         console.log(data)\n//         return data.customers.map(({ id, email, displayName }) => (\n//           <div key={id}>\n//             <p>{`${displayName} by ${email}`}</p>\n//           </div>\n//         ));\n//       }}\n//     </Query>\n//   );\n// }\n\n\nexport default CustomerList;","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/CustomerList.js"],"names":["Card","EmptyState","Layout","OptionList","Scrollable","gql","React","useEffect","useState","Query","Form","ReviewForm","Get_10_Customers","CustomerList","GET_CUSTOMERS","data","loading","error","message","customers","edges","map","edge","node","displayName","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,UAA/C,QAAiE,kBAAjE;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,gBAAgB,GAAGP,GAAH,mBAAtB;;IAeMQ,Y;;;;;;;;;;;;;6BACK;AACL,0BACI,KAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,aAAd;AAAA,kBACK,wBAA8B;AAAA,cAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,cAArBC,OAAqB,QAArBA,OAAqB;AAAA,cAAZC,KAAY,QAAZA,KAAY;;AAC7B,cAAID,OAAJ,EAAa;AAAE,gCAAO;AAAA;AAAA,cAAP;AAA6B;;AAC5C,cAAIC,KAAJ,EAAW;AAAE,gCAAO;AAAA,wBAAMA,KAAK,CAACC;AAAZ,cAAP;AAAoC;;AAEhD;AACC,mBAAOH,IAAI,CAACI,SAAL,CAAeC,KAAf,CAAqBC,GAArB,CAAyB,UAACC,IAAD;AAAA,kCAC5B;AAAA,gCAAiCA,IAAI,CAACC,IAAL,CAAUC,WAA3C;AAAA,iBAAQF,IAAI,CAACC,IAAL,CAAUC,WAAlB,CAD4B;AAAA,aAAzB,CAAP;AAEK;AACR;AATL,QADJ;AAaH;;;;EAfwBlB,KAAK,CAACmB,S,GAqBjC;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeZ,YAAf","sourcesContent":["import { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react'\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n\n/*\n\n* Getting List of existing Customers -> Shopify API - here (not done)\n\n*/\n\nconst Get_10_Customers = gql`\n  {\n    customers(first: 5) {\n      edges {\n        node {\n          id\n          displayName\n          email\n        }\n      }\n    }\n  }\n`\n\n\nclass CustomerList extends React.Component {\n  render() {\n      return (\n          <Query query={GET_CUSTOMERS}>\n              {({ data, loading, error }) => {\n                if (loading) { return <div>Loadingâ€¦</div>; }\n                if (error) { return <div>{error.message}</div>; }\n                \n                 {\n                  return data.customers.edges.map((edge) => (\n                      <p key={edge.node.displayName}> {edge.node.displayName}</p>\n                    ))}\n              }}\n          </Query>\n      )\n  }\n}\n\n\n\n\n// function CustomerList() {\n//   const [selected, setSelected] = useState([]);\n\n//   useEffect(() => {\n//     console.log(selected)\n//   }, [selected])\n\n\n//   return (\n//     <Query query={Get_10_Customers}>\n//       {({ loading, error, data }) => {\n//         if (loading) return <p>Loading...</p>;\n//         if (error) return <p>{ error.message }</p>;\n//         console.log(data)\n        \n//         return data.customers.map(({ id, email, displayName }) => (\n//           <div key={id}>\n//             <p>{`${displayName} by ${email}`}</p>\n//           </div>\n//         ));\n//       }}\n//     </Query>\n//   );\n// }\nexport default CustomerList\n"]},"metadata":{},"sourceType":"module"}