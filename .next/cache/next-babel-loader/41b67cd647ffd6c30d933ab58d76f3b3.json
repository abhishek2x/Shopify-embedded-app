{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getCustomers {\\n    customers (first: 3) {\\n      edges {\\n        node {\\n          id\\n          displayName\\n          email\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react';\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n/*\n\n* Getting List of existing Customers -> Shopify API - here (done)\n\n*/\n\nvar GET_CUSTOMERS = gql(_templateObject());\n\nfunction CustomerList() {\n  _s();\n\n  var _useState = useState([]),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  useEffect(function () {\n    console.log(selected);\n  }, [selected]);\n  return /*#__PURE__*/_jsx(Query, {\n    query: GET_CUSTOMERS,\n    children: function children(_ref) {\n      var loading = _ref.loading,\n          error = _ref.error,\n          data = _ref.data;\n      if (loading) return /*#__PURE__*/_jsx(\"p\", {\n        children: \"Loading...\"\n      });\n      if (error) return /*#__PURE__*/_jsx(\"p\", {\n        children: error.message\n      });\n      console.log(data);\n      return data.customers.edges.map(function (edge) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(\"p\", {\n            children: \"\".concat(edge.node.displayName, \" by \").concat(edge.node.email)\n          })\n        }, edge.node.id);\n      });\n    }\n  });\n}\n\n_s(CustomerList, \"239Ve9yO4iC/9vfIgHzDkghA5LI=\");\n\n_c = CustomerList;\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/CustomerList.js"],"names":["Card","EmptyState","Layout","OptionList","Scrollable","gql","React","useEffect","useState","Query","Form","ReviewForm","GET_CUSTOMERS","CustomerList","selected","setSelected","console","log","loading","error","data","message","customers","edges","map","edge","node","displayName","email","id"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,UAA/C,QAAiE,kBAAjE;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;;AAGA,IAAMC,aAAa,GAAGP,GAAH,mBAAnB;;AAcA,SAASQ,YAAT,GAAwB;AAAA;;AAAA,kBACUL,QAAQ,CAAC,EAAD,CADlB;AAAA,MACfM,QADe;AAAA,MACLC,WADK;;AAGtBR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAKA,sBACE,KAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,aAAd;AAAA,cACG,wBAA8B;AAAA,UAA3BM,OAA2B,QAA3BA,OAA2B;AAAA,UAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAC7B,UAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,QAAP;AACb,UAAIC,KAAJ,EAAW,oBAAO;AAAA,kBAAIA,KAAK,CAACE;AAAV,QAAP;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEA,aAAOA,IAAI,CAACE,SAAL,CAAeC,KAAf,CAAqBC,GAArB,CAAyB,UAAAC,IAAI;AAAA,4BAClC;AAAA,iCACE;AAAA,gCAAOA,IAAI,CAACC,IAAL,CAAUC,WAAjB,iBAAmCF,IAAI,CAACC,IAAL,CAAUE,KAA7C;AAAA;AADF,WAAUH,IAAI,CAACC,IAAL,CAAUG,EAApB,CADkC;AAAA,OAA7B,CAAP;AAMD;AAZH,IADF;AAgBD;;GAxBQhB,Y;;KAAAA,Y;AA0BT,eAAeA,YAAf","sourcesContent":["import { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react'\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n\n/*\n\n* Getting List of existing Customers -> Shopify API - here (done)\n\n*/\n\n\nconst GET_CUSTOMERS = gql`\nquery getCustomers {\n    customers (first: 3) {\n      edges {\n        node {\n          id\n          displayName\n          email\n        }\n      }\n    }\n  }\n`\n\nfunction CustomerList() {\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    console.log(selected)\n  }, [selected])\n\n\n  return (\n    <Query query={GET_CUSTOMERS}>\n      {({ loading, error, data }) => {\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>{error.message}</p>;\n        console.log(data)\n\n        return data.customers.edges.map(edge => (\n          <div key={edge.node.id}>\n            <p>{`${edge.node.displayName} by ${edge.node.email}`}</p>\n          </div>\n        ));\n        \n      }}\n    </Query>\n  );\n}\n\nexport default CustomerList\n"]},"metadata":{},"sourceType":"module"}