{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport { Button, Card, EmptyState, Layout, OptionList, Scrollable, TextField } from '@shopify/polaris';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport AddCustomer from './AddCustomer';\n/*\n\nThings I am doing here:\n\n* Sending an invitation to be among customers -> SurveySparrow API - here\n* Fetching a list of people who filled a survey -> SurveySparrow API - here\n* Adding those people among my shopify Customers -> Shopify API - AddCustomer.js\n* After adding a customer, deleting their response -> SurveySparrow API - AddCustomer.js\n\n*/\n\nfunction InviteCustomer() {\n  _s();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var handleChange = useCallback(function (newValue) {\n    return setEmail(newValue);\n  }, []);\n  var url_sendInvite = 'https://api.surveysparrow.com/v1/shares/email/2244557';\n  var url_getSubmissions = '';\n  var bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n\n  var _useState2 = useState([]),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  useEffect(function () {\n    console.log(selected);\n  }, [selected]);\n  var requestOptions1 = {\n    method: 'GET',\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': bearer\n    }\n  };\n  useEffect(function () {\n    fetch(url_getSubmissions, requestOptions1).then(function (res) {\n      console.log(\"Got the Customers to be added!\");\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }, []);\n  var requestOptions2 = {\n    method: 'PUT',\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': bearer\n    },\n    body: JSON.stringify({\n      \"contacts\": [email]\n    })\n  };\n\n  var sendInvite = function sendInvite(e) {\n    e.preventDefault();\n    console.log(\"Sending Customer Invite Mail...\");\n\n    if (email) {\n      console.log(email);\n      fetch(url_sendInvite, requestOptions2).then(function (res) {\n        console.log(\"Customer Invite Mail Sent!\");\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n      setEmail('');\n    } else {\n      console.log(\"You entered any email id\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(EmptyState, {\n      heading: \"Add a new Customer\",\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: sendInvite,\n        children: [/*#__PURE__*/_jsx(TextField, {\n          label: \"Email id\",\n          value: email,\n          onChange: handleChange,\n          placeholder: \"Enter email id\"\n        }), /*#__PURE__*/_jsx(Button, {\n          submit: true,\n          primary: true,\n          children: \"Share Survey\"\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(Layout.Section, {\n        oneHalf: true,\n        children: /*#__PURE__*/_jsx(EmptyState, {\n          heading: \"Responses are mentioned below, select to add to them among Customers\",\n          children: /*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsx(Scrollable, {\n              shadow: true,\n              style: {\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsx(OptionList, {\n                title: \"To be added among customers\",\n                onChange: setSelected,\n                allowMultiple: true,\n                options: [{\n                  label: 'BBN Frank',\n                  value: 'abhisheksrivastavabbn@gmail.com'\n                }, {\n                  label: 'Sept Fifth',\n                  value: 'abhisheksrivastavasept5@gmail.com'\n                }, {\n                  label: 'Londer Sept',\n                  value: 'abhisheksrivastava29sept@gmail.com'\n                }, {\n                  label: 'V technology',\n                  value: 'abhishek.srivastava2019@vitbhopal.ac.in'\n                }, {\n                  label: 'Survey Player',\n                  value: 'abhishek.srivastava@surveysparrow.com'\n                }],\n                selected: selected\n              })\n            })\n          })\n        })\n      }), /*#__PURE__*/_jsx(Layout.Section, {\n        oneHalf: true,\n        children: /*#__PURE__*/_jsx(AddCustomer, {})\n      })]\n    })]\n  });\n}\n\n_s(InviteCustomer, \"aeKDQyPUmY+pf7X4bHinya98Mv8=\");\n\n_c = InviteCustomer;\nexport default InviteCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"InviteCustomer\");","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/InviteCustomer.js"],"names":["Button","Card","EmptyState","Layout","OptionList","Scrollable","TextField","React","useCallback","useEffect","useState","AddCustomer","InviteCustomer","email","setEmail","handleChange","newValue","url_sendInvite","url_getSubmissions","bearer","selected","setSelected","console","log","requestOptions1","method","withCredentials","headers","fetch","then","res","err","requestOptions2","body","JSON","stringify","sendInvite","e","preventDefault","height","label","value"],"mappings":"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","sourcesContent":["import { Button, Card, EmptyState, Layout, OptionList, Scrollable, TextField } from '@shopify/polaris'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport AddCustomer from './AddCustomer';\n\n/*\n\nThings I am doing here:\n\n* Sending an invitation to be among customers -> SurveySparrow API - here\n* Fetching a list of people who filled a survey -> SurveySparrow API - here\n* Adding those people among my shopify Customers -> Shopify API - AddCustomer.js\n* After adding a customer, deleting their response -> SurveySparrow API - AddCustomer.js\n\n*/\n\nfunction InviteCustomer() {\n  const [email, setEmail] = useState('');\n  const handleChange = useCallback((newValue) => setEmail(newValue), []);\n\n  const url_sendInvite = 'https://api.surveysparrow.com/v1/shares/email/2244557'\n  const url_getSubmissions = ''\n  const bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    console.log(selected)\n  }, [selected])\n\n  const requestOptions1 = {\n    method: 'GET',\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': bearer,\n    }\n  };\n  useEffect(() => {\n    fetch(url_getSubmissions, requestOptions1)\n      .then((res) => {\n        console.log(\"Got the Customers to be added!\")\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  const requestOptions2 = {\n    method: 'PUT',\n    withCredentials: true,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': bearer,\n    },\n    body: JSON.stringify({\n      \"contacts\": [email]\n    })\n  };\n\n  const sendInvite = (e) => {\n\n    e.preventDefault();\n    console.log(\"Sending Customer Invite Mail...\")\n\n    if (email) {\n      console.log(email)\n\n      fetch(url_sendInvite, requestOptions2)\n        .then((res) => {\n          console.log(\"Customer Invite Mail Sent!\")\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n\n      setEmail('');\n    }\n    else {\n      console.log(\"You entered any email id\")\n    }\n  };\n\n  return (\n    <>\n      <EmptyState\n        heading=\"Add a new Customer\"\n      >\n        <form onSubmit={sendInvite}>\n          <TextField\n            label=\"Email id\"\n            value={email}\n            onChange={handleChange}\n            placeholder=\"Enter email id\"\n          />\n          <Button submit primary>Share Survey</Button>\n        </form>\n      </EmptyState>\n\n      <Layout >\n        <Layout.Section oneHalf>\n          <EmptyState\n            heading=\"Responses are mentioned below, select to add to them among Customers\"\n          >\n            <Card>\n              <Scrollable shadow style={{ height: '300px' }}>\n                <OptionList\n                  title=\"To be added among customers\"\n                  onChange={setSelected}\n                  allowMultiple\n                  options={[\n                    { label: 'BBN Frank', value: 'abhisheksrivastavabbn@gmail.com' },\n                    { label: 'Sept Fifth', value: 'abhisheksrivastavasept5@gmail.com' },\n                    { label: 'Londer Sept', value: 'abhisheksrivastava29sept@gmail.com' },\n                    { label: 'V technology', value: 'abhishek.srivastava2019@vitbhopal.ac.in' },\n                    { label: 'Survey Player', value: 'abhishek.srivastava@surveysparrow.com' },\n                  ]}\n                  selected={selected}\n                />\n              </Scrollable>\n            </Card>\n          </EmptyState>\n        </Layout.Section>\n        <Layout.Section oneHalf>\n          <AddCustomer />\n          {/* <ReviewForm customers={selected} setCustomers={setSelected} /> */}\n        </Layout.Section>\n      </Layout>\n    </>\n  )\n}\n\nexport default InviteCustomer\n"]},"metadata":{},"sourceType":"module"}