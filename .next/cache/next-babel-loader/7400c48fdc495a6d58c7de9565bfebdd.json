{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button, EmptyState } from '@shopify/polaris';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\n\nfunction Form() {\n  const {\n    0: input,\n    1: setInput\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setemail\n  } = useState(\"\");\n  var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  const url = 'https://api.surveysparrow.com/v1/shares/email/2238842';\n  const bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n\n  if (email) {\n    useEffect(() => {\n      const requestOptions = {\n        method: 'PUT',\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': bearer,\n          'Origin': 'https://df33099b3a88.ngrok.io'\n        },\n        body: JSON.stringify({\n          \"contacts\": [email]\n        })\n      };\n      fetch(proxyUrl + url, requestOptions).then(console.log(\"Review sent\")).catch(err => {\n        console.log(err);\n      });\n    }, [email]);\n  }\n\n  const sendSurveys = e => {\n    console.log(\"Button clicked\");\n    e.preventDefault();\n\n    if (input) {\n      setemail(input);\n      console.log(email);\n      setInput(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsx(EmptyState, {\n    heading: \"Review form Survey from Customers through emails\",\n    children: /*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: sendSurveys,\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        for: \"name\",\n        children: \"Name\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        placeholder: \"Email id\",\n        type: \"input\",\n        name: \"input\",\n        id: \"input\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      })]\n    })\n  });\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/ReviewForm.js"],"names":["Button","EmptyState","React","useEffect","useState","Form","input","setInput","email","setemail","proxyUrl","url","bearer","requestOptions","method","withCredentials","headers","body","JSON","stringify","fetch","then","console","log","catch","err","sendSurveys","e","preventDefault","target","value"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,IAAT,GAAgB;AACZ,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIM,QAAQ,GAAG,sCAAf;AACA,QAAMC,GAAG,GAAG,uDAAZ;AACA,QAAMC,MAAM,GAAG,YAAY,0FAA3B;;AAEA,MAAIJ,KAAJ,EAAW;AACPL,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAMU,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBC,QAAAA,eAAe,EAAE,IAFE;AAGnBC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiBJ,MAFZ;AAGL,oBAAU;AAHL,SAHU;AAQnBK,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,sBAAY,CAACX,KAAD;AADK,SAAf;AARa,OAAvB;AAYAY,MAAAA,KAAK,CAACV,QAAQ,GAAGC,GAAZ,EAAiBE,cAAjB,CAAL,CACKQ,IADL,CAEQC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAFR,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,OANL;AAOH,KApBQ,EAoBN,CAACjB,KAAD,CApBM,CAAT;AAqBH;;AAED,QAAMkB,WAAW,GAAIC,CAAD,IAAO;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAI,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAItB,KAAJ,EAAW;AACPG,MAAAA,QAAQ,CAACH,KAAD,CAAR;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GARD;;AAUA,sBACI,KAAC,UAAD;AACI,IAAA,OAAO,EAAC,kDADZ;AAAA,2BAII;AAAM,MAAA,QAAQ,EAAEmB,WAAhB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA,QADJ,eAEI;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,EAAE,EAAC,OAJP;AAKI,QAAA,KAAK,EAAEpB,KALX;AAMI,QAAA,QAAQ,EAAGqB,CAAD,IAAOpB,QAAQ,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV;AAN7B,QAFJ,eAUI,cAVJ,eAWI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA,QAXJ;AAAA;AAJJ,IADJ;AAoBH;;AAED,eAAezB,IAAf","sourcesContent":["import { Button, EmptyState } from '@shopify/polaris'\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\n\nfunction Form() {\n    const [input, setInput] = useState(\"\")\n    const [email, setemail] = useState(\"\")\n\n    var proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n    const url = 'https://api.surveysparrow.com/v1/shares/email/2238842'\n    const bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n\n    if (email) {\n        useEffect(() => {\n            const requestOptions = {\n                method: 'PUT',\n                withCredentials: true,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': bearer,\n                    'Origin': 'https://df33099b3a88.ngrok.io'\n                },\n                body: JSON.stringify({\n                    \"contacts\": [email]\n                })\n            };\n            fetch(proxyUrl + url, requestOptions)\n                .then(\n                    console.log(\"Review sent\")\n                )\n                .catch((err) => {\n                    console.log(err)\n                })\n        }, [email]);\n    }\n\n    const sendSurveys = (e) => {\n        console.log(\"Button clicked\")\n        e.preventDefault();\n        if (input) {\n            setemail(input);\n            console.log(email)\n            setInput(\"\");\n        }\n    }\n\n    return (\n        <EmptyState\n            heading=\"Review form Survey from Customers through emails\"\n        >\n            {/* <p>Enter the email address of customers.</p> */}\n            <form onSubmit={sendSurveys}>\n                <label for=\"name\">Name</label>\n                <input\n                    placeholder=\"Email id\"\n                    type=\"input\"\n                    name=\"input\"\n                    id=\"input\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                />\n                <br />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </EmptyState>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}