{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getCustomers {\\n    customers (first: 3) {\\n      edges {\\n        node {\\n          id\\n          displayName\\n          email\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react';\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\nimport { ResourceList, Stack, TextStyle } from \"@shopify/polaris\";\n/*\n\n* Getting List of existing Customers -> Shopify API - here (done)\n\n*/\n\nvar GET_CUSTOMERS = gql(_templateObject());\n\nfunction CustomerList() {\n  _s();\n\n  var _useState = useState([]),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  useEffect(function () {\n    console.log(selected);\n  }, [selected]);\n  return /*#__PURE__*/_jsx(Query, {\n    query: GET_CUSTOMERS,\n    children: function children(_ref) {\n      var loading = _ref.loading,\n          error = _ref.error,\n          data = _ref.data;\n      if (loading) return /*#__PURE__*/_jsx(\"p\", {\n        children: \"Loading...\"\n      });\n      if (error) return /*#__PURE__*/_jsx(\"p\", {\n        children: error.message\n      });\n      console.log(\"Here's the ENDGAME ==>> \\n\", data); // return data.customers.edges.map(edge => (\n      //   <div key={edge.node.id}>\n      //     <p>{`${edge.node.displayName} by ${edge.node.email}`}</p>\n      //   </div>\n      // ));\n\n      var label = [];\n      var value = [];\n      label = data.customers.edges.map(function (edge) {\n        return edge.node.displayName;\n      });\n      value = data.customers.edges.map(function (edge) {\n        return edge.node.email;\n      }); // let FinalList = [{\n      //   label: '',\n      //   value: ''\n      // }]\n      // keys.forEach((key, i) => result[key] = values[i]);\n      // var firstArray = ['John', 'David', 'Bob'];\n      // var secondArray = ['Mike','Sam','Carol'];\n\n      var arrayOfObject = label.map(function (v, index) {\n        return {\n          label: v,\n          value: value[index]\n        };\n      });\n      console.log(\">>>>\", arrayOfObject);\n      return /*#__PURE__*/_jsxs(Layout, {\n        children: [/*#__PURE__*/_jsx(Layout.Section, {\n          oneHalf: true,\n          children: /*#__PURE__*/_jsx(EmptyState, {\n            children: /*#__PURE__*/_jsx(ReviewForm, {\n              customers: selected,\n              setCustomers: setSelected\n            })\n          })\n        }), /*#__PURE__*/_jsx(Layout.Section, {\n          oneHalf: true,\n          children: /*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsx(Scrollable, {\n              shadow: true,\n              style: {\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsx(OptionList, {\n                title: \"To be added among customers\",\n                onChange: setSelected,\n                allowMultiple: true,\n                options: [{\n                  label: 'BBN Frank',\n                  value: 'abhisheksrivastavabbn@gmail.com'\n                }, {\n                  label: 'Dale Frank',\n                  value: 'abhisheksrivastavabbn@gmail.com'\n                }],\n                selected: selected\n              })\n            })\n          })\n        })]\n      });\n    }\n  });\n}\n\n_s(CustomerList, \"239Ve9yO4iC/9vfIgHzDkghA5LI=\");\n\n_c = CustomerList;\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/CustomerList.js"],"names":["Card","EmptyState","Layout","OptionList","Scrollable","gql","React","useEffect","useState","Query","Form","ReviewForm","ResourceList","Stack","TextStyle","GET_CUSTOMERS","CustomerList","selected","setSelected","console","log","loading","error","data","message","label","value","customers","edges","map","edge","node","displayName","email","arrayOfObject","v","index","height"],"mappings":"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","sourcesContent":["import { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react'\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\nimport {\n  ResourceList,\n  Stack,\n  TextStyle,\n} from \"@shopify/polaris\";\n\n/*\n\n* Getting List of existing Customers -> Shopify API - here (done)\n\n*/\n\n\nconst GET_CUSTOMERS = gql`\nquery getCustomers {\n    customers (first: 3) {\n      edges {\n        node {\n          id\n          displayName\n          email\n        }\n      }\n    }\n  }\n`\n\nfunction CustomerList() {\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    console.log(selected)\n  }, [selected])\n\n\n  return (\n    <Query query={GET_CUSTOMERS}>\n      {({ loading, error, data }) => {\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>{error.message}</p>;\n\n        console.log(\"Here's the ENDGAME ==>> \\n\", data)\n\n        // return data.customers.edges.map(edge => (\n        //   <div key={edge.node.id}>\n        //     <p>{`${edge.node.displayName} by ${edge.node.email}`}</p>\n        //   </div>\n        // ));\n\n\n        let label = [];\n        let value = [];\n\n        label = data.customers.edges.map(edge => (\n          edge.node.displayName\n        ));\n        value = data.customers.edges.map(edge => (\n          edge.node.email\n        ));\n\n        // let FinalList = [{\n        //   label: '',\n        //   value: ''\n        // }]\n        // keys.forEach((key, i) => result[key] = values[i]);\n        // var firstArray = ['John', 'David', 'Bob'];\n        // var secondArray = ['Mike','Sam','Carol'];\n\n        var arrayOfObject = label.map(function (v, index){\n           return {\n             label: v, \n             value: value[index]}\n        });\n\n        console.log(\">>>>\", arrayOfObject)\n\n        return (\n          <Layout >\n            <Layout.Section oneHalf>\n              <EmptyState>\n                <ReviewForm customers={selected} setCustomers={setSelected} />\n              </EmptyState>\n            </Layout.Section>\n\n            <Layout.Section oneHalf>\n\n              <Card>\n                <Scrollable shadow style={{ height: '300px' }}>\n                  <OptionList\n                    title=\"To be added among customers\"\n                    onChange={setSelected}\n                    allowMultiple\n\n                    options={[\n                      {\n                        label: 'BBN Frank',\n                        value: 'abhisheksrivastavabbn@gmail.com'\n                      },\n                      {\n                        label: 'Dale Frank',\n                        value: 'abhisheksrivastavabbn@gmail.com'\n                      }\n                    ]}\n                    selected={selected}\n                  />\n                </Scrollable>\n              </Card>\n            </Layout.Section>\n          </Layout>\n        )\n      }}\n    </Query>\n  );\n}\n\nexport default CustomerList\n"]},"metadata":{},"sourceType":"module"}