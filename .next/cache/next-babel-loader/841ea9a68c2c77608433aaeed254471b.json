{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button, EmptyState, TextField } from '@shopify/polaris';\nimport React, { useCallback, useEffect } from 'react';\nimport { useState } from 'react'; // Here I am using surveySparrow API\n\nfunction Form() {\n  const {\n    0: input,\n    1: setInput\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setemail\n  } = useState(\"\");\n  const url = 'https://api.surveysparrow.com/v1/shares/email/2238842';\n  const bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n  useEffect(() => {\n    const requestOptions = {\n      method: 'PUT',\n      withCredentials: true,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': bearer\n      },\n      body: JSON.stringify({\n        \"contacts\": [email]\n      })\n    };\n    fetch(url, requestOptions).then(res => {\n      console.log(\"Review sent\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [email]);\n\n  const sendSurveys = e => {\n    console.log(\"Button clicked\");\n    e.preventDefault();\n\n    if (input) {\n      setemail(input);\n      console.log(email);\n      setInput(\"\");\n    }\n  };\n\n  const handleChange = useCallback(newValue => setInput(newValue), []);\n  return /*#__PURE__*/_jsx(EmptyState, {\n    heading: \"\",\n    children: /*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: sendSurveys,\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        for: \"name\",\n        children: \"Name\"\n      }), /*#__PURE__*/_jsx(TextField, {\n        label: \"Email id\",\n        value: input,\n        onChange: handleChange\n      }), \";\", /*#__PURE__*/_jsx(Button, {\n        submit: true,\n        primary: true,\n        children: \"Submit\"\n      })]\n    })\n  });\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/ReviewForm.js"],"names":["Button","EmptyState","TextField","React","useCallback","useEffect","useState","Form","input","setInput","email","setemail","url","bearer","requestOptions","method","withCredentials","headers","body","JSON","stringify","fetch","then","res","console","log","catch","err","sendSurveys","e","preventDefault","handleChange","newValue"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,IAAT,GAAgB;AACZ,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMM,GAAG,GAAG,uDAAZ;AACA,QAAMC,MAAM,GAAG,YAAY,0FAA3B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,eAAe,EAAE,IAFE;AAGnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBJ;AAFZ,OAHU;AAOnBK,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,oBAAY,CAACV,KAAD;AADK,OAAf;AAPa,KAAvB;AAWAW,IAAAA,KAAK,CAACT,GAAD,EAAME,cAAN,CAAL,CACKQ,IADL,CACWC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KANL;AAOH,GAnBQ,EAmBN,CAACjB,KAAD,CAnBM,CAAT;;AAsBA,QAAMkB,WAAW,GAAIC,CAAD,IAAO;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAI,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAItB,KAAJ,EAAW;AACPG,MAAAA,QAAQ,CAACH,KAAD,CAAR;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GARD;;AASA,QAAMsB,YAAY,GAAG3B,WAAW,CAAE4B,QAAD,IAAcvB,QAAQ,CAACuB,QAAD,CAAvB,EAAmC,EAAnC,CAAhC;AAEA,sBACI,KAAC,UAAD;AACI,IAAA,OAAO,EAAC,EADZ;AAAA,2BAII;AAAM,MAAA,QAAQ,EAAEJ,WAAhB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA,QADJ,eAEI,KAAC,SAAD;AAAW,QAAA,KAAK,EAAC,UAAjB;AAA4B,QAAA,KAAK,EAAEpB,KAAnC;AAA0C,QAAA,QAAQ,EAAEuB;AAApD,QAFJ,oBAGI,KAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,OAAO,MAAtB;AAAA;AAAA,QAHJ;AAAA;AAJJ,IADJ;AAYH;;AAED,eAAexB,IAAf","sourcesContent":["import { Button, EmptyState, TextField } from '@shopify/polaris'\nimport React, { useCallback, useEffect } from 'react'\nimport { useState } from 'react'\n\n// Here I am using surveySparrow API\nfunction Form() { \n    const [input, setInput] = useState(\"\")\n    const [email, setemail] = useState(\"\")\n\n    const url = 'https://api.surveysparrow.com/v1/shares/email/2238842'\n    const bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'PUT',\n            withCredentials: true,\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': bearer,\n            },\n            body: JSON.stringify({\n                \"contacts\": [email]\n            })\n        };\n        fetch(url, requestOptions)\n            .then((res) => {\n                console.log(\"Review sent\")\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [email]);\n\n \n    const sendSurveys = (e) => {\n        console.log(\"Button clicked\")\n        e.preventDefault();\n        if (input) {\n            setemail(input);\n            console.log(email)\n            setInput(\"\");\n        }\n    }\n    const handleChange = useCallback((newValue) => setInput(newValue), []);\n\n    return (\n        <EmptyState\n            heading=\"\"\n        >\n            {/* <p>Enter the email address of customers.</p> */}\n            <form onSubmit={sendSurveys}>\n                <label for=\"name\">Name</label>\n                <TextField label=\"Email id\" value={input} onChange={handleChange} />;\n                <Button submit primary>Submit</Button>\n            </form>\n        </EmptyState>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}