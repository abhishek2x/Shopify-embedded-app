{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Button, EmptyState, TextField } from '@shopify/polaris';\nimport React, { useCallback, useEffect } from 'react';\nimport { useState } from 'react'; // Here I am using surveySparrow API\n\nfunction Form({\n  customers,\n  setCustomers\n}) {\n  // const [input, setInput] = useState(\"\")\n  const {\n    0: email,\n    1: setemail\n  } = useState([]);\n  const url = 'https://api.surveysparrow.com/v1/shares/email/2238828';\n  const bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n  customersEmail = [];\n  const listItems = customers.map(customer => /*#__PURE__*/_jsx(\"li\", {\n    children: \"customer.value\"\n  }));\n  useEffect(() => {\n    const requestOptions = {\n      method: 'PUT',\n      withCredentials: true,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': bearer\n      },\n      // cutomersEmail = extractEmail(customers)\n      body: JSON.stringify({\n        \"contacts\": cutomersEmail\n      })\n    };\n    fetch(url, requestOptions).then(res => {\n      console.log(\"Order making form sent\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [email]);\n\n  const sendSurveys = e => {\n    e.preventDefault();\n    console.log(\"Button clicked\");\n\n    if (customers) {\n      setemail(customers);\n      console.log(customers);\n      setCustomers([]);\n    }\n  }; // const handleChange = useCallback((newValue) => setInput(newValue), []);\n\n\n  return /*#__PURE__*/_jsx(EmptyState, {\n    children: /*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: sendSurveys,\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        for: \"name\",\n        children: \"Share Survey through emails\"\n      }), /*#__PURE__*/_jsx(Button, {\n        submit: true,\n        primary: true,\n        children: \"Submit\"\n      })]\n    })\n  });\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/Form.js"],"names":["Button","EmptyState","TextField","React","useCallback","useEffect","useState","Form","customers","setCustomers","email","setemail","url","bearer","customersEmail","listItems","map","customer","requestOptions","method","withCredentials","headers","body","JSON","stringify","cutomersEmail","fetch","then","res","console","log","catch","err","sendSurveys","e","preventDefault"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAd,EAA2C;AACzC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMM,GAAG,GAAG,uDAAZ;AACA,QAAMC,MAAM,GAAG,YAAY,0FAA3B;AAEAC,EAAAA,cAAc,GAAG,EAAjB;AACA,QAAMC,SAAS,GAAGP,SAAS,CAACQ,GAAV,CAAeC,QAAD,iBAC9B;AAAA;AAAA,IADgB,CAAlB;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,eAAe,EAAE,IAFI;AAGrBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiBR;AAFV,OAHY;AAOrB;AACAS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,oBAAYC;AADO,OAAf;AARe,KAAvB;AAYAC,IAAAA,KAAK,CAACd,GAAD,EAAMM,cAAN,CAAL,CACGS,IADH,CACSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,KAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KANH;AAOD,GApBQ,EAoBN,CAACtB,KAAD,CApBM,CAAT;;AAsBA,QAAMuB,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAItB,SAAJ,EAAe;AACbG,MAAAA,QAAQ,CAACH,SAAD,CAAR;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,SAAZ;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GARD,CAnCyC,CA6CzC;;;AAEA,sBACE,KAAC,UAAD;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEwB,WAAhB;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA,QADF,eAGE,KAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,OAAO,MAAtB;AAAA;AAAA,QAHF;AAAA;AADF,IADF;AASD;;AAED,eAAe1B,IAAf","sourcesContent":["import { Button, EmptyState, TextField } from '@shopify/polaris'\nimport React, { useCallback, useEffect } from 'react'\nimport { useState } from 'react'\n\n// Here I am using surveySparrow API\nfunction Form({ customers, setCustomers }) {\n  // const [input, setInput] = useState(\"\")\n  const [email, setemail] = useState([])\n\n  const url = 'https://api.surveysparrow.com/v1/shares/email/2238828'\n  const bearer = 'Bearer ' + 'pr0XQuLJrxoeXIiJ6fhDnp_pJ3QgHQ2-8jY2xTrjbfLx1Iv-iFn6KxNtGi01SRDDFWJUmDpNS8SnawQl97OGIMkA';\n\n  customersEmail = []\n  const listItems = customers.map((customer) =>\n    <li>customer.value</li>\n  );\n\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'PUT',\n      withCredentials: true,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': bearer,\n      },\n      // cutomersEmail = extractEmail(customers)\n      body: JSON.stringify({\n        \"contacts\": cutomersEmail\n      })\n    };\n    fetch(url, requestOptions)\n      .then((res) => {\n        console.log(\"Order making form sent\")\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [email]);\n\n  const sendSurveys = (e) => {\n    e.preventDefault();\n    console.log(\"Button clicked\")\n    if (customers) {\n      setemail(customers);\n      console.log(customers)\n      setCustomers([]);\n    }\n  }\n\n  // const handleChange = useCallback((newValue) => setInput(newValue), []);\n\n  return (\n    <EmptyState >\n      <form onSubmit={sendSurveys}>\n        <label for=\"name\">Share Survey through emails</label>\n        {/* <TextField label=\"Email id\" value={input} onChange={handleChange} /> */}\n        <Button submit primary>Submit</Button>\n      </form>\n    </EmptyState>\n  )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}