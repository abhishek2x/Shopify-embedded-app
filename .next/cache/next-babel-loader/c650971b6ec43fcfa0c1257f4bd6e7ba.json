{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react';\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n/*\n\n* Getting List of existing Customers -> Shopify API - here (not done)\n\n*/\n// const GET_CUSTOMERS = gql`\n//     query getCustomers {\n//         customers {\n//             edges {\n//               node {\n//                 displayName\n//                 totalSpent\n//               }\n//             }\n//           }\n//     }\n// `\n\nconst GET_CUSTOMERS = gql`\nquery getCustomers {\n    customers (first: 3) {\n      edges {\n        node {\n          id\n          displayName\n          email\n        }\n      }\n    }\n  }\n`; // class CustomerList extends React.Component {\n//   render() {\n//     return (\n//       <Query query={GET_CUSTOMERS}>\n//         {({ data, loading, error }) => {\n//           if (loading) { return <div>Loading…</div>; }\n//           if (error) { return <div>{error.message}</div>; }\n//           {\n//             return data.customers.edges.map((edge) => (\n//               <p key={edge.node.displayName}> {edge.node.displayName}</p>\n//             ))\n//           }\n//         }}\n//       </Query>\n//     )\n//   }\n// }\n\nfunction CustomerList() {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState([]);\n  useEffect(() => {\n    console.log(selected);\n  }, [selected]);\n  return /*#__PURE__*/_jsx(Query, {\n    query: GET_CUSTOMERS,\n    children: ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/_jsx(\"p\", {\n        children: \"Loading...\"\n      });\n      if (error) return /*#__PURE__*/_jsx(\"p\", {\n        children: error.message\n      });\n      console.log(data);\n      return data.customers.edges.map(edge => /*#__PURE__*/_jsxs(\"p\", {\n        children: [\" \", edge.node.displayName]\n      }, edge.node.id)); // return data.customers.edges.map(node => (\n      //   <div key={node.id}>\n      //     <p>{`${node.displayName} by ${node.email}`}</p>\n      //   </div>\n      // ));\n    }\n  });\n}\n\nexport default CustomerList;","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/CustomerList.js"],"names":["Card","EmptyState","Layout","OptionList","Scrollable","gql","React","useEffect","useState","Query","Form","ReviewForm","GET_CUSTOMERS","CustomerList","selected","setSelected","console","log","loading","error","data","message","customers","edges","map","edge","node","displayName","id"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,UAA/C,QAAiE,kBAAjE;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAGP,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,SAASQ,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAKA,sBACE,KAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,aAAd;AAAA,cACG,CAAC;AAAEM,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,QAAP;AACb,UAAIC,KAAJ,EAAW,oBAAO;AAAA,kBAAIA,KAAK,CAACE;AAAV,QAAP;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEA,aAAOA,IAAI,CAACE,SAAL,CAAeC,KAAf,CAAqBC,GAArB,CAA0BC,IAAD,iBAC9B;AAAA,wBAAwBA,IAAI,CAACC,IAAL,CAAUC,WAAlC;AAAA,SAAQF,IAAI,CAACC,IAAL,CAAUE,EAAlB,CADK,CAAP,CAL6B,CAU7B;AACA;AACA;AACA;AACA;AACD;AAhBH,IADF;AAoBD;;AAED,eAAef,YAAf","sourcesContent":["import { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react'\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n\n/*\n\n* Getting List of existing Customers -> Shopify API - here (not done)\n\n*/\n\n\n// const GET_CUSTOMERS = gql`\n//     query getCustomers {\n//         customers {\n//             edges {\n//               node {\n//                 displayName\n//                 totalSpent\n//               }\n//             }\n//           }\n//     }\n// `\n\nconst GET_CUSTOMERS = gql`\nquery getCustomers {\n    customers (first: 3) {\n      edges {\n        node {\n          id\n          displayName\n          email\n        }\n      }\n    }\n  }\n`\n\n\n// class CustomerList extends React.Component {\n//   render() {\n//     return (\n//       <Query query={GET_CUSTOMERS}>\n//         {({ data, loading, error }) => {\n//           if (loading) { return <div>Loading…</div>; }\n//           if (error) { return <div>{error.message}</div>; }\n\n//           {\n//             return data.customers.edges.map((edge) => (\n//               <p key={edge.node.displayName}> {edge.node.displayName}</p>\n//             ))\n//           }\n//         }}\n//       </Query>\n//     )\n//   }\n// }\n\n\n\n\nfunction CustomerList() {\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    console.log(selected)\n  }, [selected])\n\n\n  return (\n    <Query query={GET_CUSTOMERS}>\n      {({ loading, error, data }) => {\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>{error.message}</p>;\n        console.log(data)\n\n        return data.customers.edges.map((edge) => (\n          <p key={edge.node.id}> {edge.node.displayName}</p>\n        ))\n\n\n        // return data.customers.edges.map(node => (\n        //   <div key={node.id}>\n        //     <p>{`${node.displayName} by ${node.email}`}</p>\n        //   </div>\n        // ));\n      }}\n    </Query>\n  );\n}\n\nexport default CustomerList\n"]},"metadata":{},"sourceType":"module"}