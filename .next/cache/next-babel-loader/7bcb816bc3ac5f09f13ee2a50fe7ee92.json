{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    customers(first: 10) {\\n      edges {\\n        node {\\n          id\\n          displayName\\n          email\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react';\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n/*\n\n* Getting List of existing Customers -> Shopify API - here (not done)\n\n*/\n\nvar Get_10_Customers = gql(_templateObject());\n\nfunction CustomerList() {\n  _s();\n\n  var _useState = useState([]),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  useEffect(function () {\n    console.log(selected);\n  }, [selected]);\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [/*#__PURE__*/_jsx(Layout.Section, {\n      oneHalf: true,\n      children: /*#__PURE__*/_jsxs(EmptyState, {\n        children: [/*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(Query, {\n          query: Get_10_Customers,\n          children: function children(_ref) {\n            var loading = _ref.loading,\n                error = _ref.error,\n                data = _ref.data;\n            if (loading) return /*#__PURE__*/_jsx(\"p\", {\n              children: \"Loading...\"\n            });\n            if (error) return /*#__PURE__*/_jsx(\"p\", {\n              children: error\n            });\n            return data.customers.map(function (_ref2) {\n              var id = _ref2.id,\n                  email = _ref2.email,\n                  displayName = _ref2.displayName;\n              return /*#__PURE__*/_jsx(\"div\", {\n                children: /*#__PURE__*/_jsx(\"p\", {\n                  children: \"\".concat(displayName, \" by \").concat(email)\n                })\n              }, id);\n            });\n          }\n        }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsx(Scrollable, {\n            shadow: true,\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsx(OptionList, {\n              title: \"Customers\",\n              onChange: setSelected,\n              allowMultiple: true,\n              options: [{\n                label: 'BBN Frank',\n                value: 'abhisheksrivastavabbn@gmail.com'\n              }, {\n                label: 'Sept Fifth',\n                value: 'abhisheksrivastavasept5@gmail.com'\n              }, {\n                label: 'Londer Sept',\n                value: 'abhisheksrivastava29sept@gmail.com'\n              }, {\n                label: 'V technology',\n                value: 'abhishek.srivastava2019@vitbhopal.ac.in'\n              }, {\n                label: 'Survey Player',\n                value: 'abhishek.srivastava@surveysparrow.com'\n              }],\n              selected: selected\n            })\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(Layout.Section, {\n      oneHalf: true,\n      children: [/*#__PURE__*/_jsx(Form, {\n        customers: selected,\n        setCustomers: setSelected\n      }), /*#__PURE__*/_jsx(ReviewForm, {\n        customers: selected,\n        setCustomers: setSelected\n      })]\n    })]\n  });\n}\n\n_s(CustomerList, \"239Ve9yO4iC/9vfIgHzDkghA5LI=\");\n\n_c = CustomerList;\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"sources":["/home/abhishek/Internships/SurveySparrow/Shopify-app/sample-embedded-app/components/CustomerList.js"],"names":["Card","EmptyState","Layout","OptionList","Scrollable","gql","React","useEffect","useState","Query","Form","ReviewForm","Get_10_Customers","CustomerList","selected","setSelected","console","log","loading","error","data","customers","map","id","email","displayName","height","label","value"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,UAA/C,QAAiE,kBAAjE;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,gBAAgB,GAAGP,GAAH,mBAAtB;;AAcA,SAASQ,YAAT,GAAwB;AAAA;;AAAA,kBACUL,QAAQ,CAAC,EAAD,CADlB;AAAA,MACfM,QADe;AAAA,MACLC,WADK;;AAGtBR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAKA,sBACE,MAAC,MAAD;AAAA,4BACE,KAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,OAAO,MAAvB;AAAA,6BACE,MAAC,UAAD;AAAA,gCACE,cADF,eAEE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAEF,gBAAd;AAAA,oBACG,wBAA8B;AAAA,gBAA3BM,OAA2B,QAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,gBAAXC,IAAW,QAAXA,IAAW;AAC7B,gBAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA,cAAP;AACb,gBAAIC,KAAJ,EAAW,oBAAO;AAAA,wBAAIA;AAAJ,cAAP;AAEX,mBAAOC,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB;AAAA,kBAAGC,EAAH,SAAGA,EAAH;AAAA,kBAAOC,KAAP,SAAOA,KAAP;AAAA,kBAAcC,WAAd,SAAcA,WAAd;AAAA,kCACxB;AAAA,uCACE;AAAA,sCAAOA,WAAP,iBAAyBD,KAAzB;AAAA;AADF,iBAAUD,EAAV,CADwB;AAAA,aAAnB,CAAP;AAKD;AAVH,UAFF,eAcE,cAdF,eAeE,KAAC,IAAD;AAAA,iCACE,KAAC,UAAD;AAAY,YAAA,MAAM,MAAlB;AAAmB,YAAA,KAAK,EAAE;AAAEG,cAAAA,MAAM,EAAE;AAAV,aAA1B;AAAA,mCACE,KAAC,UAAD;AACE,cAAA,KAAK,EAAC,WADR;AAEE,cAAA,QAAQ,EAAEX,WAFZ;AAGE,cAAA,aAAa,MAHf;AAIE,cAAA,OAAO,EAAE,CACP;AAAEY,gBAAAA,KAAK,EAAE,WAAT;AAAsBC,gBAAAA,KAAK,EAAE;AAA7B,eADO,EAEP;AAAED,gBAAAA,KAAK,EAAE,YAAT;AAAuBC,gBAAAA,KAAK,EAAE;AAA9B,eAFO,EAGP;AAAED,gBAAAA,KAAK,EAAE,aAAT;AAAwBC,gBAAAA,KAAK,EAAE;AAA/B,eAHO,EAIP;AAAED,gBAAAA,KAAK,EAAE,cAAT;AAAyBC,gBAAAA,KAAK,EAAE;AAAhC,eAJO,EAKP;AAAED,gBAAAA,KAAK,EAAE,eAAT;AAA0BC,gBAAAA,KAAK,EAAE;AAAjC,eALO,CAJX;AAWE,cAAA,QAAQ,EAAEd;AAXZ;AADF;AADF,UAfF;AAAA;AADF,MADF,eAqCE,MAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,OAAO,MAAvB;AAAA,8BACE,KAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,QAAjB;AAA2B,QAAA,YAAY,EAAEC;AAAzC,QADF,eAEE,KAAC,UAAD;AAAY,QAAA,SAAS,EAAED,QAAvB;AAAiC,QAAA,YAAY,EAAEC;AAA/C,QAFF;AAAA,MArCF;AAAA,IADF;AA4CD;;GApDQF,Y;;KAAAA,Y;AAqDT,eAAeA,YAAf","sourcesContent":["import { Card, EmptyState, Layout, OptionList, Scrollable } from '@shopify/polaris';\nimport { gql } from 'apollo-boost';\nimport React, { useEffect, useState } from 'react'\nimport { Query } from 'react-apollo';\nimport Form from './Form';\nimport ReviewForm from './ReviewForm';\n\n/*\n\n* Getting List of existing Customers -> Shopify API - here (not done)\n\n*/\n\nconst Get_10_Customers = gql`\n  {\n    customers(first: 10) {\n      edges {\n        node {\n          id\n          displayName\n          email\n        }\n      }\n    }\n  }\n`\n\nfunction CustomerList() {\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    console.log(selected)\n  }, [selected])\n\n\n  return (\n    <Layout >\n      <Layout.Section oneHalf>\n        <EmptyState>\n          <hr />\n          <Query query={Get_10_Customers}>\n            {({ loading, error, data }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>{error}</p>;\n\n              return data.customers.map(({ id, email, displayName }) => (\n                <div key={id}>\n                  <p>{`${displayName} by ${email}`}</p>\n                </div>\n              ));\n            }}\n          </Query>\n          <hr />\n          <Card>\n            <Scrollable shadow style={{ height: '300px' }}>\n              <OptionList\n                title=\"Customers\"\n                onChange={setSelected}\n                allowMultiple\n                options={[\n                  { label: 'BBN Frank', value: 'abhisheksrivastavabbn@gmail.com' },\n                  { label: 'Sept Fifth', value: 'abhisheksrivastavasept5@gmail.com' },\n                  { label: 'Londer Sept', value: 'abhisheksrivastava29sept@gmail.com' },\n                  { label: 'V technology', value: 'abhishek.srivastava2019@vitbhopal.ac.in' },\n                  { label: 'Survey Player', value: 'abhishek.srivastava@surveysparrow.com' },\n                ]}\n                selected={selected}\n              />\n            </Scrollable>\n          </Card>\n\n        </EmptyState>\n      </Layout.Section>\n      <Layout.Section oneHalf>\n        <Form customers={selected} setCustomers={setSelected} />\n        <ReviewForm customers={selected} setCustomers={setSelected} />\n      </Layout.Section>\n    </Layout>\n  );\n}\nexport default CustomerList\n"]},"metadata":{},"sourceType":"module"}